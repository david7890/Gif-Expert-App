{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","console","log","trim","length","c","type","placeholder","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","key","GifExpertApp","categories","onClick","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAiB5C,OACI,0BAAMC,SAXW,SAACC,GAClBA,EAAEC,iBACFC,QAAQC,IAAI,UACRN,EAAWO,OAAOC,OAAS,IAC3BV,GAAe,SAAAW,GAAC,OAAKT,GAAL,mBAAoBS,OACpCR,EAAc,OAOd,uEACA,2BAAOS,KAAK,OACZC,YAAY,2BACZC,MAAOZ,EACPa,SApBkB,SAACV,GACvBE,QAAQC,IAAIH,EAAEW,OAAOF,OACrBX,EAAcE,EAAEW,OAAOF,YCNlBG,EAAc,SAAC,GAAqB,EAApBC,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IACpC,OACI,yBAAKC,UAAU,0CACX,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,K,uBCNHK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbN,EADa,iDACmCO,UAAUF,GAD7C,+DAEAG,MAAMR,GAFN,cAEbS,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAM,CACFhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAKc,EAAIC,OAAOC,iBAAiBhB,QATtB,kBAaZY,GAbY,4CAAH,sDCIPK,EAAU,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAAc,ECAX,SAAEA,GAAa,IAAD,EACZxB,mBAAS,CAC/B8B,KAAM,GACNO,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAoBtC,OAdAC,qBAAW,WAEPjB,EAAQC,GACHiB,MAAM,SAAAC,GACHC,YAAY,WACRJ,EAAS,CACLT,KAAMY,EACNL,SAAS,MAEd,UAGb,CAACb,IAEIc,EDlB2BM,CAAapB,GAAjCU,EAFqB,EAE5BJ,KAAeO,EAFa,EAEbA,QAEtB,OACI,oCACI,4BAAKb,GACJa,EAAU,2CAAsB,KACjC,yBAAKjB,UAAU,aAEHc,EAAOF,KAAI,SAAAC,GAAG,OACT,kBAAC,EAAD,eAAaY,IAAKZ,EAAIhB,IAAQgB,UEgB5Ca,EA3Ba,WAAO,IAAD,EAEM9C,mBAAS,CAAC,UAFhB,mBAEvB+C,EAFuB,KAEXhD,EAFW,KAO9B,OACI,6BACI,8CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BAAQiD,QARE,WACdjD,GAAc,SAAAW,GAAC,OAAK,SAAL,mBAAiBA,SAO5B,qBACA,4BAEQqC,EAAWf,KAAI,SAAAR,GAAQ,OACnB,kBAAC,EAAD,CACIqB,IAAMrB,EACNA,SAAUA,UCjBtCyB,IAASC,OACP,kBAAC,EAAD,MAAkBC,SAASC,eAAe,U","file":"static/js/main.61daafb2.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n        console.log(e.target.value)\r\n        setInputValue(e.target.value)\r\n    }\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault()\r\n        console.log('submit')\r\n        if (inputValue.trim().length > 1){\r\n            setCategories( c => [inputValue, ...c])\r\n            setInputValue('')\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <label>Busca un GIF o escribe una categoria</label>\r\n            <input type='text'\r\n            placeholder='Escribe y presiona Enter' \r\n            value={inputValue}\r\n            onChange={handleInputChange}></input>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__shakeY\">\r\n            <img src={url} alt={title}></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","export const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=Y2jEmDaXW24ntC07rHC2BeebY6GFF0D4`\r\n    const resp = await fetch(url)\r\n    const {data} = await resp.json()\r\n\r\n    const gifs = data.map( img =>{\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url  \r\n        }\r\n    })\r\n\r\n    return gifs\r\n}","import React from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data : images, loading } = useFetchGifs(category)\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            {loading ? <p>Cargando ...</p> : null}\r\n            <div className=\"card-grid\">\r\n                    {\r\n                        images.map(img =>\r\n                            (<GifGridItem key={img.id} {...img}/>))\r\n                    }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import {useState, useEffect} from 'react'\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\n//Custom Hook\r\nexport const useFetchGifs = ( category) =>{\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs(category)\r\n            .then( imgs => {\r\n                setTimeout( () => {\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    })\r\n                }, 1000)\r\n            })\r\n\r\n    },[category])\r\n\r\n    return state\r\n}","import React, {useState} from 'react'\r\nimport {AddCategory} from './components/AddCategory'\r\nimport {GifGrid} from './components/GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Anime'])\r\n\r\n    const handleAdd = () =>{\r\n        setCategories(c => ['Memes', ...c])\r\n    }\r\n    return (\r\n        <div>\r\n            <h2>Gif Expert App</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr></hr>\r\n            <button onClick= {handleAdd}>Agregar categoria</button>\r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrid \r\n                            key ={category}\r\n                            category={category}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp />, document.getElementById('root')\n) "],"sourceRoot":""}